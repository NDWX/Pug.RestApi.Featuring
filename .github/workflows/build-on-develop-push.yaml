name: develop - build

on:
  push:
    branches:
      - develop

env:
  BuildConfiguration: debug
  Solution: Pug.RestApi.Featuring.sln
  AspNetProject: src/Pug.RestApi.Featuring.AspNet/Pug.RestApi.Featuring.AspNet.csproj

jobs:
  build:
    name: Build Projects
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Authenticates packages to push to GPR
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' # SDK Version to use.
          source-url: https://nuget.pkg.github.com/Pug.RestApi.Featuring.AspNet/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: SonarCloud Scan
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /o:ndwx /k:NDWX_Pug.RestApi.Featuring /d:sonar.login=${{secrets.SONAR_TOKEN}}  /d:sonar.host.url=https://sonarcloud.io  /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Restore NuGet packages
        run: dotnet restore ${{env.Solution}}

      - name: Build Main project
        run: dotnet build --nologo --no-restore --configuration ${{env.BuildConfiguration}} ${{env.AspNetProject}}

      - name: End Sonar scan
        run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any